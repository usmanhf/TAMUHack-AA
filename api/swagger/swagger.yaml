swagger: "2.0"
info:
  version: "0.0.1"
  title: TAMUHack-AA
# basePath prefixes all resource paths
basePath: /
# Uncomment for local dev:
# host: localhost:3030
schemes:
  # Uncomment for local dev:
  # - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
  - application/octet-stream
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /mock:
    x-swagger-router-controller: mock
    post:
      description: Populates the DB with mock data (process may take up to 5 minutes)
      tags:
        - Mock
      operationId: mock
      responses:
        "200":
          description: Success
          schema:
            type: string
        "500":
          description: Error populating DB
          schema:
            type: string
  /passenger:
    x-swagger-router-controller: passenger
    get:
      description: Returns a passenger object matching the specified information
      tags:
        - Passenger
      operationId: passenger
      parameters:
        - name: email
          in: query
          description: Email address
          required: true
          type: string
      responses:
        "200":
          description: Passenger found
          schema:
            $ref: "#/definitions/Passenger"
        "400":
          description: Passenger could not be found
          schema:
            type: string
    post:
      description: Creates a passenger object with the specified data
      tags:
        - Passenger
      operationId: createPassenger
      parameters:
        - name: firstName
          in: query
          description: First name
          required: true
          type: string
        - name: lastName
          in: query
          description: Last name
          required: true
          type: string
        - name: email
          in: query
          description: Email address
          required: true
          type: string
        - name: gender
          in: query
          description: Gender
          required: true
          type: string
          enum: ["Male", "Female", "Other"]
        - name: aadvantageNumber
          in: query
          description: AAdvantage number
          required: false
          type: string
        - name: seatChoice
          in: query
          description: seat choice
          required: true
          type: string
          enum: ["window", "aisle"]
        - name: flightClass
          in: query
          description: flight class
          required: true
          enum: ["F", "B", "E"]
        - name: talk
          in: query
          description: talking or not
          required: true
          type: string
          enum: ["yes", "no"]
      responses:
        "200":
          description: Passenger created
          schema:
            $ref: "#/definitions/Passenger"
        "400":
          description: Passenger could not be created
          schema:
            type: string
  /reservation:
    x-swagger-router-controller: reservation
    get:
      description: Returns a reservation matching the specified record locator
      tags:
        - Reservation
      operationId: reservation
      parameters:
        - name: recordLocator
          in: query
          description: "6 character string for the desired reservation"
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Reservation"
        "500":
            description: Reservation not found
            schema:
              type: string
    post:
      description: Creates a reservation with the specified data
      tags:
        - Reservation
      operationId: createReservation
      parameters:
      - name: passengerId
        in: query
        description: Passenger ID
        required: true
        type: string
      - name: flightIds
        in: query
        description: An array of Flight IDs (MongoDB _id)
        required: true
        type: array
        items:
          type: string
      responses:
        "200":
          description: Reservation created
          schema:
            $ref: "#/definitions/Reservation"
        "400":
          description: Reservation could not be created
          schema:
            type: string
  /flight:
    x-swagger-router-controller: flight
    get:
      description: Returns a flight matching the specified flight number
      tags:
          - Flight
      operationId: flight
      parameters:
          - name: flightNumber
            in: query
            description: "Flight number for the desired flight"
            required: true
            type: string
          - name: date
            in: query
            description: "Departure date for the desired flight (e.g., \"2018-03-01T08:45-06:00\")"
            required: true
            type: string
            format: date-time
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/FlightSegment"
        "500":
            description: Flight not found
            schema:
              type: string
  /flights:
    x-swagger-router-controller: flight
    get:
      operationId: flights
      tags:
          - Flight
      parameters:
        - name: origin
          in: query
          description: "Airport code for origin"
          type: string
          enum: ["DFW", "LAX", "MIA", "PHL", "ORD", "JFK", "LHR", "HKG"]
        - name: destination
          in: query
          description: "Airport code for destination"
          type: string
          enum: ["DFW", "LAX", "MIA", "PHL", "ORD", "JFK", "LHR", "HKG"]
        - name: date
          in: query
          description: "Departure date (origin) for the desired flight (e.g., \"2018-03-01T08:45-06:00\")"
          required: true
          type: string
          format: date-time
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            type: array
            items:
              $ref: "#/definitions/FlightSegment"
  /flightStatus:
    x-swagger-router-controller: flight
    post:
      operationId: setFlightStatus
      tags:
        - Flight
      parameters:
        - name: flightId
          in: query
          description: "Flight ID (MongoDB _id) for the desired flight"
          required: true
          type: string
        - name: flightStatus
          in: query
          description: "New flight status for the desired flight"
          required: true
          type: string
          default: "On-Time"
          enum: ["On-Time", "Delayed", "Cancelled"]
      responses:
        "200":
          description: Success
          schema:
            type: string
  /airports:
    x-swagger-router-controller: airport
    get:
      operationId: airports
      tags:
        - Airport
      parameters:
      - name: code
        in: query
        description: Airport code
        required: false
        type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            type: array
            items:
              $ref: "#/definitions/Airport"
  /docs:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  Passenger:
    required:
      - firstName
      - lastName
      - gender
      - email
      - talk
      - flightClass
      - seatChoice
    properties:
      firstName:
        type: string
      lastName:
        type: string
      gender:
        $ref: "#/definitions/Gender"
      email:
        type: string
      aadvantageId:
        type: string
      id:
        type: string
      seatChoice:
        $ref: "#/definitions/SeatChoice"
      flightClass:
        $ref: "#/definitions/FlightClass"
      talk:
        $ref: "#/definitions/Talk"
  Reservation:
    required:
      - recordLocator
    properties:
      firstName:
        type: string
      lastName:
        type: string
      recordLocator:
        type: string
      flights:
        type: array
        items:
          $ref: "#/definitions/FlightSegment"
  FlightSegment:
    properties:
      flightNumber:
        type: string
      originCode:
        type: string
      originCity:
        type: string
      destinationCode:
        type: string
      destinationCity:
        type: string
      estimatedDeparture:
        type: string
      scheduledDeparture:
        type: string
      estimatedArrival:
        type: string
      scheduledArrival:
        type: string
  Airport:
    required:
      - code
    properties:
      id:
        type: string
      code:
        type: string
      name:
        type: string
      city:
        type: string
      stateCode:
        type: string
      countryName:
        type: string
      countryCode:
        type: string
      longitude:
        type: number
      latitude:
        type: number
      admiralsClubUrl:
        type: string
  Gender:
    type: string
    enum:
      - Male
      - Female
      - Other
  SeatChoice:
    type: string
    enum:
      - window
      - aisle
  FlightClass:
    type: string
    enum:
      - F
      - B
      - E
  Talk:
    type: string
    enum:
      - yes
      - no
